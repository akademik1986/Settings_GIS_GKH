<?xml version="1.0" encoding="UTF-8"?>
<V8Exch:_1CV8DtUD xmlns:V8Exch="http://www.1c.ru/V8/1CV8DtUD/" xmlns:v8="http://v8.1c.ru/data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<V8Exch:Data>
		<CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
			<Ref>4c47ea1e-3310-11e6-8683-00155d62161c</Ref>
			<IsFolder>true</IsFolder>
			<DeletionMark>false</DeletionMark>
			<Parent>00000000-0000-0000-0000-000000000000</Parent>
			<Code>000000018</Code>
			<Description>ИПУ (8.5.0.2)</Description>
			<КаталогДляФайлов>4c47ea1e-3310-11e6-8683-00155d62161c</КаталогДляФайлов>
			<КоличествоЗаписейВФайле>1000</КоличествоЗаписейВФайле>
			<ПрефиксФайлаВыгрузки>ИПУ</ПрефиксФайлаВыгрузки>
			<Шаблон></Шаблон>
			<ШаблонЗагружен>true</ШаблонЗагружен>
			<СоответствиеПолей/>
			<КолонкиРезультата/>
			<ЗависимыеЛисты/>
		</CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
		<CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
			<Ref>838a6f8c-3c63-11e6-80bf-001dd8b71c1f</Ref>
			<IsFolder>false</IsFolder>
			<DeletionMark>false</DeletionMark>
			<Parent>4c47ea1e-3310-11e6-8683-00155d62161c</Parent>
			<Code>000000019</Code>
			<Description>Импорт показаний ИПУ</Description>
			<АлгоритмАнализаРезультатаОбработки>838a6f8c-3c63-11e6-80bf-001dd8b71c1f|uid|</АлгоритмАнализаРезультатаОбработки>
			<АлгоритмОбработкиКолонкиПередЗаписью/>
			<АлгоритмПолученияДанных>МенеджерВременныхТаблиц = КонтекстВыполнения.МенеджерВременныхТаблиц ; 


   // ПАРАМЕТРЫ РЕГИОНОВ
   
  //Необходимо перечислить все виды догворов которые планируется выгружать в ГИС ЖКХ.
  //Если в базе только один вид договора его все равно необходимо указать.
  ВидыДоговоров = Новый СписокЗначений;
  ВидыДоговоров.Добавить(Справочники.ВидыДоговоров.НайтиПоКоду("000000003"));
  
    
  //Для анализа будут отобраны только те договоры у которых: Договор.УслугаНаселению В (&amp;УслугиДоговоров) 
  //По умолчанию отбираются договора на предопределенной услуге "ГазоснабжениеПрироднымГазом" в данной настройке
  //можно указать любую другую услугу (или услуги) которые в вашей БД считаются газоснабжением и договора по которым вы 
  //считаете нужным отражать в ГИС ЖКХ.
  УслугиДоговоров = Новый СписокЗначений;
  УслугиДоговоров.Добавить(Справочники.УслугиНаселению.ГазоснабжениеПрироднымГазом);
    
  Запрос = Новый Запрос;
  Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц ; 

  Запрос.УстановитьПараметр("ВидыДоговоров",ВидыДоговоров);     
  Запрос.УстановитьПараметр("УслугиДоговоров",УслугиДоговоров);   

  /////////////////////////////////////////////////////////////////////////////////////
   
  //Стандартные параметры
  Запрос.УстановитьПараметр("ПоВсемАбонентам",КонтекстВыполнения.ПоВсемАбонентам);
  Запрос.УстановитьПараметр("СписокАбонентов",КонтекстВыполнения.СписокАбонентов);
  Запрос.УстановитьПараметр("Подразделение",КонтекстВыполнения.Подразделение);
  Запрос.УстановитьПараметр("КонецУчетногоМесяц",КонецМесяца(Расчеты.ПолучитьАктуальныйРасчетныйПериод(КонтекстВыполнения.Подразделение)));
  Запрос.УстановитьПараметр("УчетныйМесяц",Расчеты.ПолучитьАктуальныйРасчетныйПериод(КонтекстВыполнения.Подразделение));
  
  ///////////////////////////////////////////////////////////////////////////////////////////////
  
  Запрос.Текст = "
  |ВЫБРАТЬ
  |	ПодразделенияАбонентовСрезПоследних.Абонент
  |ПОМЕСТИТЬ ВТ_АбонентыПодразделения
  |ИЗ
  |	РегистрСведений.ПодразделенияАбонентов.СрезПоследних(
  |			,
  |			&amp;ПоВсемАбонентам
  |				ИЛИ Абонент В (&amp;СписокАбонентов)) КАК ПодразделенияАбонентовСрезПоследних
  |ГДЕ
  |	ПодразделенияАбонентовСрезПоследних.Подразделение = &amp;Подразделение
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ
  |	ВЫРАЗИТЬ(СостояниеДоговораСрезПоследних.Договор.Владелец КАК Справочник.Абоненты) КАК Абонент
  |ПОМЕСТИТЬ ВТ_АбонентыСДействующимиДоговорами
  |ИЗ
  |	РегистрСведений.СостояниеДоговора.СрезПоследних(
  |			,
  |			Договор.Владелец В
  |					(ВЫБРАТЬ
  |						ВТ_АбонентыПодразделения.Абонент
  |					ИЗ
  |						ВТ_АбонентыПодразделения КАК ВТ_АбонентыПодразделения)
  |				И НЕ Договор.ПометкаУдаления
  |				И Договор.Владелец ССЫЛКА Справочник.Абоненты
  |				И УчетныйМесяц &lt;= &amp;УчетныйМесяц
  |				И ДатаНачала &lt;= &amp;КонецУчетногоМесяц
  |				И Договор.ВидДоговора В (&amp;ВидыДоговоров)
  |				И ВЫРАЗИТЬ(Договор.Владелец КАК Справочник.Абоненты).ВладелецЛС ССЫЛКА Справочник.ФизическиеЛица
  |				И Договор.УслугаНаселению В (&amp;УслугиДоговоров)) КАК СостояниеДоговораСрезПоследних
  |ГДЕ
  |	ВЫБОР
  |			КОГДА СостояниеДоговораСрезПоследних.СостояниеДоговора В (ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоров.Заключен), ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоров.Пролонгирован))
  |					И (СостояниеДоговораСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
  |						ИЛИ СостояниеДоговораСрезПоследних.ДатаОкончания &gt;= &amp;КонецУчетногоМесяц)
  |				ТОГДА ИСТИНА
  |			ИНАЧЕ ЛОЖЬ
  |		КОНЕЦ = ИСТИНА
  |	И ВЫРАЗИТЬ(СостояниеДоговораСрезПоследних.Договор.Владелец КАК Справочник.Абоненты).ВладелецЛС ССЫЛКА Справочник.ФизическиеЛица
  |
  |СГРУППИРОВАТЬ ПО
  |	ВЫРАЗИТЬ(СостояниеДоговораСрезПоследних.Договор.Владелец КАК Справочник.Абоненты)";
   
 Запрос.Выполнить();
 
 
 
 мОтбор = Новый Массив;   
 ДатаСреза = КонецМесяца(Расчеты.ПолучитьАктуальныйРасчетныйПериод(КонтекстВыполнения.Подразделение));
 мОтбор.Добавить(Новый Структура("ИмяПараметра,ЗнакСравнения,ЗначениеПараметра","Оборудование.ИзмерительноеОборудование","=",Истина));	
 мОтбор.Добавить(Новый Структура("ИмяПараметра,ЗнакСравнения,ЗначениеПараметра","Оборудование.ГрупповоеОборудование","=",Ложь));	 
 мОтбор.Добавить(Новый Структура("ИмяПараметра,ЗнакСравнения,ЗначениеПараметра","Оборудование.УникальныйНомерГИСЖКХ","&lt;&gt;",""));
 мОтбор.Добавить(Новый Структура("ИмяПараметра,ЗнакСравнения,ЗначениеПараметра,ИмяВременнойТаблицы","Абонент","В","Абонент","ВТ_АбонентыСДействующимиДоговорами"));	

 РегистрыСведений.УстановленноеОборудование.СрезПоследнихПринимаемыхКУчетуВоВременнуюТаблицу(ДатаСреза, мОтбор, МенеджерВременныхТаблиц);		
 
 Запрос.Текст = "ВЫБРАТЬ
 |	*
 |ПОМЕСТИТЬ ДействующиеОборудование
 |ИЗ
 |	СП_ПКУ_УстановленноеОборудование КАК СП_ПКУ_УстановленноеОборудование

 |		Где  СП_ПКУ_УстановленноеОборудование.Действует;";
 Запрос.Выполнить();
  
 мОтбор = Новый Массив;    
 мОтбор.Добавить(Новый Структура("ИмяПараметра,ЗнакСравнения,ЗначениеПараметра,ИмяВременнойТаблицы","Оборудование","В","Оборудование","ДействующиеОборудование"));
 РегистрыСведений.ПоказанияСчетчиков.СрезПоследнихПринимаемыхКУчетуВоВременнуюТаблицу(ДатаСреза, мОтбор,МенеджерВременныхТаблиц);	
 
 Запрос.Текст = "
 |УНИЧТОЖИТЬ ПКУ_ПоказанияСчетчиков
 |;
 |
 |////////////////////////////////////////////////////////////////////////////////
 |ВЫБРАТЬ
 |	ДействующиеОборудование.Абонент.Наименование КАК АбонентНаименование,
 |	ДействующиеОборудование.Оборудование КАК ПУ,
 |	ДействующиеОборудование.Абонент.Подразделения КАК Подразделение,
 |	СП_ПКУ_ПоказанияСчетчиков.Значение КАК ЗначениеПоказания,
 |	ДействующиеОборудование.Оборудование.ИД_ГИСЖКХ КАК НомерГИСЖКХ,
 |	ДействующиеОборудование.Абонент КАК АбонентСсылка
 |ПОМЕСТИТЬ ВТ_ГИСЖКХ_Показания_ИПУ
 |ИЗ
 |	ДействующиеОборудование КАК ДействующиеОборудование
 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СП_ПКУ_ПоказанияСчетчиков КАК СП_ПКУ_ПоказанияСчетчиков
 |		ПО ДействующиеОборудование.Оборудование = СП_ПКУ_ПоказанияСчетчиков.Оборудование
 |;
 |
 |////////////////////////////////////////////////////////////////////////////////
 |ВЫБРАТЬ
 |	ГИСЖКХ_Показания_ИПУ.ПУ,
 |	ГИСЖКХ_Показания_ИПУ.Подразделение,
 |	ГИСЖКХ_Показания_ИПУ.ЗначениеПоказания,
 |	ГИСЖКХ_Показания_ИПУ.НомерГИСЖКХ,
 |	ГИСЖКХ_Показания_ИПУ.АбонентСсылка,
 |	ГИСЖКХ_Показания_ИПУ.АбонентНаименование КАК Абонент
 |ИЗ
 |	ВТ_ГИСЖКХ_Показания_ИПУ КАК ГИСЖКХ_Показания_ИПУ";
 Результат = Запрос.Выполнить().Выгрузить();</АлгоритмПолученияДанных>
			<АлгоритмПолученияДанныхДляВыгрузкиВEXCEL/>
			<АлгоритмПослеСравненияДанных/>
			<АлгоритмПроверкиОшибок/>
			<АлгоритмСравненияДанных/>
			<ИмяРегистраДляГИСЖКХ>ГИСЖКХ_Показания_ИПУ</ИмяРегистраДляГИСЖКХ>
			<НаименованиеЛистаВФайле>Импорт показаний ИПУ</НаименованиеЛистаВФайле>
			<НачальнаяСтрокаXLS>2</НачальнаяСтрокаXLS>
			<ПорядокЗаполнения>1</ПорядокЗаполнения>
			<ИмяПоляОбъекта/>
			<ИмяРеквизита/>
			<НомерКолонкиИДВерсииОбъектаВГИСЖКХ>0</НомерКолонкиИДВерсииОбъектаВГИСЖКХ>
			<СоответствиеПолей>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Подразделение</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Абонент</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>АбонентССылка</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>false</ОбязательноДляЗаполнения>
					<ПолеРегистра>ПУ</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>НомерГИСЖКХ</ПолеРегистра>
					<КолонкаШаблона>1</КолонкаШаблона>
					<КлючевоеПоле>true</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>ЗначениеПоказания</ПолеРегистра>
					<КолонкаШаблона>2</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
			</СоответствиеПолей>
			<КолонкиРезультата/>
			<ЗависимыеЛисты/>
		</CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
	</V8Exch:Data>
</V8Exch:_1CV8DtUD>