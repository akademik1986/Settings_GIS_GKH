<?xml version="1.0" encoding="UTF-8"?>
<V8Exch:_1CV8DtUD xmlns:V8Exch="http://www.1c.ru/V8/1CV8DtUD/" xmlns:v8="http://v8.1c.ru/data" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<V8Exch:Data>
		<CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
			<Ref>082ef369-aff1-4b27-82cf-56cdb85b6591</Ref>
			<IsFolder>true</IsFolder>
			<DeletionMark>false</DeletionMark>
			<Parent>00000000-0000-0000-0000-000000000000</Parent>
			<Code>000000019</Code>
			<Description>МКД-РСО 8.7.2.2</Description>
			<КаталогДляФайлов>082ef369-aff1-4b27-82cf-56cdb85b6591</КаталогДляФайлов>
			<КоличествоЗаписейВФайле>900</КоличествоЗаписейВФайле>
			<ПрефиксФайлаВыгрузки>МКД</ПрефиксФайлаВыгрузки>
			<Шаблон></Шаблон>
			<ШаблонЗагружен>true</ШаблонЗагружен>
			<СоответствиеПолей/>
			<КолонкиРезультата/>
			<ЗависимыеЛисты/>
		</CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
		<CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
			<Ref>e2175a06-ac0d-4362-89ae-6494b961ab16</Ref>
			<IsFolder>false</IsFolder>
			<DeletionMark>false</DeletionMark>
			<Parent>082ef369-aff1-4b27-82cf-56cdb85b6591</Parent>
			<Code>000000020</Code>
			<Description>Комнаты</Description>
			<АлгоритмАнализаРезультатаОбработки>e2175a06-ac0d-4362-89ae-6494b961ab16|uid|ИмяКолонкиСтатуса = "СтатусОбработки";
ИмяКолонкиИД = "";
СтрокаСтатуса = "";

КонтекстВыполнения.Результат.СостояниеВыгрузки = КонтекстВыполнения.СтатусПринятВГИСЖКХ;
	
СтрокаСтатуса = ?(ЗначениеЗаполнено(СтрокаСтатуса), СтрокаСтатуса, КонтекстВыполнения.ОбрабатываемаяСтрока[ИмяКолонкиСтатуса]);

КонтекстВыполнения.Результат.Данные1 = СтрокаСтатуса;	


ЕстьОшибки = АлгоритмАнализаРезультатаОбработки_ЕстьОшибки(КонтекстВыполнения, СтрокаСтатуса, , "FMT,INT,AUT,SRV");

Если ЕстьОшибки тогда
	КонтекстВыполнения.Результат.СостояниеВыгрузки = КонтекстВыполнения.СтатусНеПринятВГИСЖКХ;
ИначеЕсли ИмяКолонкиИД &lt;&gt; "" тогда  
	КонтекстВыполнения.Результат.ПрисвоенныйИД = КонтекстВыполнения.ОбрабатываемаяСтрока[ИмяКолонкиИД];
КонецЕсли;</АлгоритмАнализаРезультатаОбработки>
			<АлгоритмОбработкиКолонкиПередЗаписью/>
			<АлгоритмПолученияДанных>//----------------------------------------Начало секции параметров------------------------------------------------------------------------- 
  //Необходимо перечислить все виды догворов которые планируется выгружать в ГИС ЖКХ.
  //Если в базе только один вид договора его все равно необходимо указать.
  ВидыДоговоров = Новый СписокЗначений;
  ВидыДоговоров.Добавить(Справочники.ВидыДоговоров.НайтиПоКоду("000000001"));
    
  //Для анализа будут отобраны только те договоры у которых: Договор.УслугаНаселению В (&amp;УслугиДоговоров) 
  //По умолчанию отбираются договора на предопределенной услуге "ГазоснабжениеПрироднымГазом" в данной настройке
  //можно указать любую другую услугу (или услуги) которые в вашей БД считаются газоснабжением и договора по которым вы 
  //считаете нужным отражать в ГИС ЖКХ.
  УслугиДоговоров = Новый СписокЗначений;
  УслугиДоговоров.Добавить(Справочники.УслугиНаселению.ГазоснабжениеПрироднымГазом);
 
  //Указывается элемент справочника ТипыЗданий который соответсвует многоквартирному жилом фонду
  ТипЗданияМногоквартирныйДом   = Справочники.ТипыЗданий.НайтиПоКоду("2");
  
  //Указывается элемент соответсвующий часовому поясу по Олсон. Список поясов доступен а файле шаблона.
  ЧасоваяЗонаПоOLSON = "Москва";


//----------------------------------------Конец секции параметров------------------------------------------------------------------------- 
  
  ///////////////////////////////////////////////////////////////////////////////////////////////
  Запрос = Новый Запрос;
  Запрос.МенеджерВременныхТаблиц = КонтекстВыполнения.МенеджерВременныхТаблиц ; 
  
  Запрос.УстановитьПараметр("ВидыДоговоров",ВидыДоговоров);     
  Запрос.УстановитьПараметр("УслугиДоговоров",УслугиДоговоров);   
  Запрос.УстановитьПараметр("ТипЗданияМногоквартирныйДом",ТипЗданияМногоквартирныйДом); 
  Запрос.УстановитьПараметр("ЧасоваяЗонаПоOLSON",ЧасоваяЗонаПоOLSON);  
  
  //Стандартные параметры
  Запрос.УстановитьПараметр("ПоВсемАбонентам",КонтекстВыполнения.ПоВсемАбонентам);
  Запрос.УстановитьПараметр("СписокАбонентов",КонтекстВыполнения.СписокАбонентов);
  Запрос.УстановитьПараметр("ВидКонтактнойИнформацииАдресАбонента",Справочники.ВидыКонтактнойИнформации.АдресАбонента);
  Запрос.УстановитьПараметр("Подразделение",КонтекстВыполнения.Подразделение);
  Запрос.УстановитьПараметр("КонецУчетногоМесяц",КонецМесяца(Расчеты.ПолучитьАктуальныйРасчетныйПериод(КонтекстВыполнения.Подразделение)));
  Запрос.УстановитьПараметр("УчетныйМесяц",Расчеты.ПолучитьАктуальныйРасчетныйПериод(КонтекстВыполнения.Подразделение));
	Запрос.УстановитьПараметр("Площадь", ПланыВидовХарактеристик.ПараметрыАбонентовДляРасчета.ПлощадьЖилая));
  
  Запрос.Текст = "
  |ВЫБРАТЬ
  |	ПодразделенияАбонентовСрезПоследних.Абонент
  |ПОМЕСТИТЬ ВТ_АбонентыПодразделения
  |ИЗ
  |	РегистрСведений.ПодразделенияАбонентов.СрезПоследних(
  |			,
  |			&amp;ПоВсемАбонентам
  |				ИЛИ Абонент В (&amp;СписокАбонентов)) КАК ПодразделенияАбонентовСрезПоследних
  |ГДЕ
  |	ПодразделенияАбонентовСрезПоследних.Подразделение = &amp;Подразделение
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ
  |	ВЫРАЗИТЬ(СостояниеДоговораСрезПоследних.Договор.Владелец КАК Справочник.Абоненты) КАК Абонент
  |ПОМЕСТИТЬ ВТ_АбонентыСДействующимиДоговорами
  |ИЗ
  |	РегистрСведений.СостояниеДоговора.СрезПоследних(
  |			,
  |			Договор.Владелец В
  |					(ВЫБРАТЬ
  |						ВТ_АбонентыПодразделения.Абонент
  |					ИЗ
  |						ВТ_АбонентыПодразделения КАК ВТ_АбонентыПодразделения)
  |				И НЕ Договор.ПометкаУдаления
  |				И Договор.Владелец ССЫЛКА Справочник.Абоненты
  |				И УчетныйМесяц &lt;= &amp;УчетныйМесяц
  |				И ДатаНачала &lt;= &amp;КонецУчетногоМесяц
  |				И Договор.ВидДоговора В (&amp;ВидыДоговоров)
  |				И ВЫРАЗИТЬ(Договор.Владелец КАК Справочник.Абоненты).ВладелецЛС ССЫЛКА Справочник.ФизическиеЛица
  |				И Договор.УслугаНаселению В (&amp;УслугиДоговоров)) КАК СостояниеДоговораСрезПоследних
  |ГДЕ
  |	ВЫБОР
  |			КОГДА СостояниеДоговораСрезПоследних.СостояниеДоговора В (ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоров.Заключен), ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоров.Пролонгирован))
  |					И (СостояниеДоговораСрезПоследних.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1)
  |						ИЛИ СостояниеДоговораСрезПоследних.ДатаОкончания &gt;= &amp;КонецУчетногоМесяц)
  |				ТОГДА ИСТИНА
  |			ИНАЧЕ ЛОЖЬ
  |		КОНЕЦ = ИСТИНА
  |	И ВЫРАЗИТЬ(СостояниеДоговораСрезПоследних.Договор.Владелец КАК Справочник.Абоненты).ВладелецЛС ССЫЛКА Справочник.ФизическиеЛица
  |
  |СГРУППИРОВАТЬ ПО
  |	ВЫРАЗИТЬ(СостояниеДоговораСрезПоследних.Договор.Владелец КАК Справочник.Абоненты)
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ
  |	&amp;Подразделение КАК Подразделение,
  |	ВТ_АбонентыСДействующимиДоговорами.Абонент,
  |	ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.Ссылка КАК Здание,
  |	ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.ВнешнийКлюч, """") КАК Адрес,
  |	ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.ГУИД, """") КАК КодДомаПоФИАС,
  |	ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.Улица.ОКТМО, """") КАК ОКТМО,
  |	ВЫБОР
  |		КОГДА ЕСТЬNULL(КонтактнаяИнформация.НомерПодъезда, 0) = 0
  |			ТОГДА 1
  |		ИНАЧЕ ЕСТЬNULL(КонтактнаяИнформация.НомерПодъезда, 0)
  |	КОНЕЦ КАК НомерПодъезда,
  |	ЕСТЬNULL(КонтактнаяИнформация.Квартира, """") КАК НомерПомещения,
  |	МАКСИМУМ(ВЫБОР
  |			КОГДА КонтактнаяИнформация.Комната ЕСТЬ NULL 
  |				ТОГДА ЛОЖЬ
  |			ИНАЧЕ ИСТИНА
  |		КОНЕЦ) КАК КоммунальнаяКвартира,
  |	ЕСТЬNULL(КонтактнаяИнформация.Комната, """") КАК НомерКомнаты,
  |	"""" КАК КадастровыйНомер
  |ПОМЕСТИТЬ ВТ_ВсеКонтактныеДанные
  |ИЗ
  |	ВТ_АбонентыСДействующимиДоговорами КАК ВТ_АбонентыСДействующимиДоговорами
  |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
  |		ПО ВТ_АбонентыСДействующимиДоговорами.Абонент = КонтактнаяИнформация.Объект
  |			И (КонтактнаяИнформация.Объект ССЫЛКА Справочник.Абоненты)
  |			И (КонтактнаяИнформация.ВидКонтактнойИнформации = &amp;ВидКонтактнойИнформацииАдресАбонента)
  |ГДЕ
  |	ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание &lt;&gt; ЗНАЧЕНИЕ(Справочник.ЗданияИСооружения.ПустаяССылка)
  |	И ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.ТипЗдания В(&amp;ТипЗданияМногоквартирныйДом)
  |	И ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.ВнешнийКлюч, """") &lt;&gt; """"
  |
  |СГРУППИРОВАТЬ ПО
  |	ВТ_АбонентыСДействующимиДоговорами.Абонент,
  |	ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.Ссылка,
  |	ВЫБОР
  |		КОГДА ЕСТЬNULL(КонтактнаяИнформация.НомерПодъезда, 0) = 0
  |			ТОГДА 1
  |		ИНАЧЕ ЕСТЬNULL(КонтактнаяИнформация.НомерПодъезда, 0)
  |	КОНЕЦ,
  |	ЕСТЬNULL(КонтактнаяИнформация.Квартира, """"),
  |	ЕСТЬNULL(КонтактнаяИнформация.Комната, """"),
  |	ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.Улица.ОКТМО, """"),
  |	ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.ВнешнийКлюч, """"),
  |	ЕСТЬNULL(ВТ_АбонентыСДействующимиДоговорами.Абонент.Здание.ГУИД, """")
  |
  |ИНДЕКСИРОВАТЬ ПО
  |	Здание,
  |	НомерПомещения
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ РАЗЛИЧНЫЕ
  |	ВТ_ВсеКонтактныеДанные.Подразделение КАК Подразделение,
  |	ВТ_ВсеКонтактныеДанные.Адрес,
  |	ВТ_ВсеКонтактныеДанные.НомерПомещения,
  |	ВТ_ВсеКонтактныеДанные.НомерКомнаты,
  |	ВТ_ВсеКонтактныеДанные.КадастровыйНомер КАК КадастровыйНомер
  |ПОМЕСТИТЬ ВТ_ГИСЖКХ_МКД_Комнаты
  |ИЗ
  |	ВТ_ВсеКонтактныеДанные КАК ВТ_ВсеКонтактныеДанные
  |ГДЕ
  |	ВТ_ВсеКонтактныеДанные.НомерКомнаты &lt;&gt; """"
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ РАЗЛИЧНЫЕ
  |	Под_ВсеКонтактныеДанные.Подразделение КАК Подразделение,
  |	Под_ВсеКонтактныеДанные.Адрес,
  |	Под_ВсеКонтактныеДанные.НомерПомещения,
  |	Под_ВсеКонтактныеДанные.НомерПодъезда,
  |	ВЫБОР
  |		КОГДА Под_ВсеКонтактныеДанные.КоммунальнаяКвартира
  |			ТОГДА ""Квартира коммунального заселения""
  |		ИНАЧЕ ""Отдельная квартира""
  |	КОНЕЦ КАК ХарактеристикаПомещения,
  |	Под_ВсеКонтактныеДанные.КадастровыйНомер
  |ПОМЕСТИТЬ ВТ_ГИСЖКХ_МКД_Помещения
  |ИЗ
  |	(ВЫБРАТЬ
  |		ВТ_ВсеКонтактныеДанные.Подразделение КАК Подразделение,
  |		ВТ_ВсеКонтактныеДанные.Адрес КАК Адрес,
  |		ВТ_ВсеКонтактныеДанные.НомерПодъезда КАК НомерПодъезда,
  |		ВТ_ВсеКонтактныеДанные.НомерПомещения КАК НомерПомещения,
  |		МАКСИМУМ(ВТ_ВсеКонтактныеДанные.КоммунальнаяКвартира) КАК КоммунальнаяКвартира,
  |		ВТ_ВсеКонтактныеДанные.КадастровыйНомер КАК КадастровыйНомер
  |	ИЗ
  |		ВТ_ВсеКонтактныеДанные КАК ВТ_ВсеКонтактныеДанные
  |	
  |	СГРУППИРОВАТЬ ПО
  |		ВТ_ВсеКонтактныеДанные.КадастровыйНомер,
  |		ВТ_ВсеКонтактныеДанные.Адрес,
  |		ВТ_ВсеКонтактныеДанные.Подразделение,
  |		ВТ_ВсеКонтактныеДанные.НомерПомещения,
  |		ВТ_ВсеКонтактныеДанные.НомерПодъезда) КАК Под_ВсеКонтактныеДанные
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ РАЗЛИЧНЫЕ
  |	ВТ_ВсеКонтактныеДанные.Подразделение,
  |	ВТ_ВсеКонтактныеДанные.Адрес,
  |	ВТ_ВсеКонтактныеДанные.КодДомаПоФИАС,
  |	ВТ_ВсеКонтактныеДанные.ОКТМО,
  |	&amp;ЧасоваяЗонаПоOLSON,
  |	ВТ_ВсеКонтактныеДанные.КадастровыйНомер
  |ПОМЕСТИТЬ ВТ_ГИСЖКХ_МКД_Характеристики_МКД
  |ИЗ
  |	ВТ_ВсеКонтактныеДанные КАК ВТ_ВсеКонтактныеДанные
  |;
  |
  |////////////////////////////////////////////////////////////////////////////////
  |ВЫБРАТЬ
  |	Вт_ГИСЖКХ_МКД_Комнаты.Подразделение,
  |	Вт_ГИСЖКХ_МКД_Комнаты.Адрес,
  |	Вт_ГИСЖКХ_МКД_Комнаты.НомерПомещения,
  |	Вт_ГИСЖКХ_МКД_Комнаты.НомерКомнаты
  |ИЗ
  |	ВТ_ГИСЖКХ_МКД_Комнаты КАК Вт_ГИСЖКХ_МКД_Комнаты";
  
  Результат = Запрос.Выполнить().Выгрузить();</АлгоритмПолученияДанных>
			<АлгоритмПолученияДанныхДляВыгрузкиВEXCEL/>
			<АлгоритмПослеСравненияДанных/>
			<АлгоритмПроверкиОшибок/>
			<АлгоритмСравненияДанных/>
			<ИмяРегистраДляГИСЖКХ>ГИСЖКХ_МКД_Комнаты</ИмяРегистраДляГИСЖКХ>
			<НаименованиеЛистаВФайле>Комнаты</НаименованиеЛистаВФайле>
			<НачальнаяСтрокаXLS>3</НачальнаяСтрокаXLS>
			<ПорядокЗаполнения>1</ПорядокЗаполнения>
			<ИмяПоляОбъекта/>
			<ИмяРеквизита/>
			<СоответствиеПолей>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Подразделение</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Адрес</ПолеРегистра>
					<КолонкаШаблона>1</КолонкаШаблона>
					<КлючевоеПоле>true</КлючевоеПоле>
					<КлючЗависимости>true</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>НомерПомещения</ПолеРегистра>
					<КолонкаШаблона>2</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>true</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>НомерКомнаты</ПолеРегистра>
					<КолонкаШаблона>3</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>false</ОбязательноДляЗаполнения>
					<ПолеРегистра>КадастровыйНомер</ПолеРегистра>
					<КолонкаШаблона>4</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
			</СоответствиеПолей>
			<КолонкиРезультата>
				<Row>
					<НомерКолонки>5</НомерКолонки>
					<ИмяКолонки>СтатусОбработки</ИмяКолонки>
				</Row>
			</КолонкиРезультата>
			<ЗависимыеЛисты>
				<Row>
					<ЗависимыйЛист>37900679-c824-491d-aed8-98bc7db195d6</ЗависимыйЛист>
				</Row>
				<Row>
					<ЗависимыйЛист>e806045d-ad7e-4b33-83d5-9456645fe1af</ЗависимыйЛист>
				</Row>
			</ЗависимыеЛисты>
		</CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
		<CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
			<Ref>37900679-c824-491d-aed8-98bc7db195d6</Ref>
			<IsFolder>false</IsFolder>
			<DeletionMark>false</DeletionMark>
			<Parent>082ef369-aff1-4b27-82cf-56cdb85b6591</Parent>
			<Code>000000021</Code>
			<Description>Помещения</Description>
			<АлгоритмАнализаРезультатаОбработки>37900679-c824-491d-aed8-98bc7db195d6|uid|ИмяКолонкиСтатуса = "СтатусОбработки";
ИмяКолонкиИД = "";
СтрокаСтатуса = "";

КонтекстВыполнения.Результат.СостояниеВыгрузки = КонтекстВыполнения.СтатусПринятВГИСЖКХ;
	
СтрокаСтатуса = ?(ЗначениеЗаполнено(СтрокаСтатуса), СтрокаСтатуса, КонтекстВыполнения.ОбрабатываемаяСтрока[ИмяКолонкиСтатуса]);

КонтекстВыполнения.Результат.Данные1 = СтрокаСтатуса;	


ЕстьОшибки = АлгоритмАнализаРезультатаОбработки_ЕстьОшибки(КонтекстВыполнения, СтрокаСтатуса, , "FMT,INT,AUT,SRV");

Если ЕстьОшибки тогда
	КонтекстВыполнения.Результат.СостояниеВыгрузки = КонтекстВыполнения.СтатусНеПринятВГИСЖКХ;
ИначеЕсли ИмяКолонкиИД &lt;&gt; "" тогда  
	КонтекстВыполнения.Результат.ПрисвоенныйИД = КонтекстВыполнения.ОбрабатываемаяСтрока[ИмяКолонкиИД];
КонецЕсли;</АлгоритмАнализаРезультатаОбработки>
			<АлгоритмОбработкиКолонкиПередЗаписью/>
			<АлгоритмПолученияДанных>//Получение данных для данного листа происходит после получения данных по помещениям, поэтому в менеджере временных таблиц существует таблица "ВТ_ГИСЖКХ_МКД_Помещения"
Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = КонтекстВыполнения.МенеджерВременныхТаблиц;
Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ГИСЖКХ_МКД_Помещения КАК ВТ_ГИСЖКХ_МКД_Помещения";
Результат = Запрос.Выполнить().Выгрузить();</АлгоритмПолученияДанных>
			<АлгоритмПолученияДанныхДляВыгрузкиВEXCEL/>
			<АлгоритмПослеСравненияДанных/>
			<АлгоритмПроверкиОшибок/>
			<АлгоритмСравненияДанных/>
			<ИмяРегистраДляГИСЖКХ>ГИСЖКХ_МКД_Помещения</ИмяРегистраДляГИСЖКХ>
			<НаименованиеЛистаВФайле>Жилые помещения</НаименованиеЛистаВФайле>
			<НачальнаяСтрокаXLS>3</НачальнаяСтрокаXLS>
			<ПорядокЗаполнения>2</ПорядокЗаполнения>
			<ИмяПоляОбъекта/>
			<ИмяРеквизита/>
			<СоответствиеПолей>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Подразделение</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Адрес</ПолеРегистра>
					<КолонкаШаблона>1</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>true</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>НомерПомещения</ПолеРегистра>
					<КолонкаШаблона>2</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>true</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>false</ОбязательноДляЗаполнения>
					<ПолеРегистра>НомерПодъезда</ПолеРегистра>
					<КолонкаШаблона>3</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>false</ОбязательноДляЗаполнения>
					<ПолеРегистра>ХарактеристикаПомещения</ПолеРегистра>
					<КолонкаШаблона>4</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>false</ОбязательноДляЗаполнения>
					<ПолеРегистра>КадастровыйНомер</ПолеРегистра>
					<КолонкаШаблона>5</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
			</СоответствиеПолей>
			<КолонкиРезультата>
				<Row>
					<НомерКолонки>6</НомерКолонки>
					<ИмяКолонки>СтатусОбработки</ИмяКолонки>
				</Row>
			</КолонкиРезультата>
			<ЗависимыеЛисты>
				<Row>
					<ЗависимыйЛист>e2175a06-ac0d-4362-89ae-6494b961ab16</ЗависимыйЛист>
				</Row>
				<Row>
					<ЗависимыйЛист>e806045d-ad7e-4b33-83d5-9456645fe1af</ЗависимыйЛист>
				</Row>
			</ЗависимыеЛисты>
		</CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
		<CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
			<Ref>e806045d-ad7e-4b33-83d5-9456645fe1af</Ref>
			<IsFolder>false</IsFolder>
			<DeletionMark>false</DeletionMark>
			<Parent>082ef369-aff1-4b27-82cf-56cdb85b6591</Parent>
			<Code>000000022</Code>
			<Description>Характеристики</Description>
			<АлгоритмАнализаРезультатаОбработки>e806045d-ad7e-4b33-83d5-9456645fe1af|uid|ИмяКолонкиСтатуса = "СтатусОбработки";
ИмяКолонкиИД = "";
СтрокаСтатуса = "";

КонтекстВыполнения.Результат.СостояниеВыгрузки = КонтекстВыполнения.СтатусПринятВГИСЖКХ;
	
СтрокаСтатуса = ?(ЗначениеЗаполнено(СтрокаСтатуса), СтрокаСтатуса, КонтекстВыполнения.ОбрабатываемаяСтрока[ИмяКолонкиСтатуса]);

КонтекстВыполнения.Результат.Данные1 = СтрокаСтатуса;	


ЕстьОшибки = АлгоритмАнализаРезультатаОбработки_ЕстьОшибки(КонтекстВыполнения, СтрокаСтатуса, , "FMT,INT,AUT,SRV");

Если ЕстьОшибки тогда
	КонтекстВыполнения.Результат.СостояниеВыгрузки = КонтекстВыполнения.СтатусНеПринятВГИСЖКХ;
ИначеЕсли ИмяКолонкиИД &lt;&gt; "" тогда  
	КонтекстВыполнения.Результат.ПрисвоенныйИД = КонтекстВыполнения.ОбрабатываемаяСтрока[ИмяКолонкиИД];
КонецЕсли;</АлгоритмАнализаРезультатаОбработки>
			<АлгоритмОбработкиКолонкиПередЗаписью/>
			<АлгоритмПолученияДанных>//Получение данных для данного листа происходит после получения данных по комнтам, поэтому в менеджере временных таблиц существует таблица "ВТ_ГИСЖКХ_МКД_Характеристики_МКД"
Запрос = Новый Запрос;
Запрос.МенеджерВременныхТаблиц = КонтекстВыполнения.МенеджерВременныхТаблиц;
Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТ_ГИСЖКХ_МКД_Характеристики_МКД КАК ВТ_ГИСЖКХ_МКД_Характеристики_МКД";
Результат = Запрос.Выполнить().Выгрузить();</АлгоритмПолученияДанных>
			<АлгоритмПолученияДанныхДляВыгрузкиВEXCEL/>
			<АлгоритмПослеСравненияДанных/>
			<АлгоритмПроверкиОшибок/>
			<АлгоритмСравненияДанных/>
			<ИмяРегистраДляГИСЖКХ>ГИСЖКХ_МКД_Характеристики_МКД</ИмяРегистраДляГИСЖКХ>
			<НаименованиеЛистаВФайле>Характеристики МКД</НаименованиеЛистаВФайле>
			<НачальнаяСтрокаXLS>3</НачальнаяСтрокаXLS>
			<ПорядокЗаполнения>3</ПорядокЗаполнения>
			<ИмяПоляОбъекта/>
			<ИмяРеквизита/>
			<СоответствиеПолей>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Подразделение</ПолеРегистра>
					<КолонкаШаблона>0</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>Адрес</ПолеРегистра>
					<КолонкаШаблона>1</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>true</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>КодДомаПоФИАС</ПолеРегистра>
					<КолонкаШаблона>2</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>ОКТМО</ПолеРегистра>
					<КолонкаШаблона>3</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>true</ОбязательноДляЗаполнения>
					<ПолеРегистра>ЧасоваяЗонаПоOLSON</ПолеРегистра>
					<КолонкаШаблона>4</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
				<Row>
					<ОбязательноДляЗаполнения>false</ОбязательноДляЗаполнения>
					<ПолеРегистра>КадастровыйНомер</ПолеРегистра>
					<КолонкаШаблона>5</КолонкаШаблона>
					<КлючевоеПоле>false</КлючевоеПоле>
					<КлючЗависимости>false</КлючЗависимости>
				</Row>
			</СоответствиеПолей>
			<КолонкиРезультата>
				<Row>
					<НомерКолонки>6</НомерКолонки>
					<ИмяКолонки>СтатусОбработки</ИмяКолонки>
				</Row>
			</КолонкиРезультата>
			<ЗависимыеЛисты>
				<Row>
					<ЗависимыйЛист>e2175a06-ac0d-4362-89ae-6494b961ab16</ЗависимыйЛист>
				</Row>
				<Row>
					<ЗависимыйЛист>37900679-c824-491d-aed8-98bc7db195d6</ЗависимыйЛист>
				</Row>
			</ЗависимыеЛисты>
		</CatalogObject.НастройкиВыгрузкиВГИСЖКХ>
	</V8Exch:Data>
</V8Exch:_1CV8DtUD>